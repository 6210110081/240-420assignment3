{"version":3,"file":"component---src-pages-404-js-77b0a00712fa755d4934.js","mappings":"6LAIMA,EAAW,SAAC,GAChB,OADkC,EAAhBC,UAEd,CAAEC,UAAW,mBACb,CAAEA,UAAW,WAClB,EAEKC,EAAe,SAAAC,GAAK,OAAI,gBAAC,KAAD,eAAMC,SAAUL,GAAcI,GAAlC,EAEpBE,EAAS,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAChB,OACE,uBAAKL,UAAU,kDACb,uBAAKA,UAAU,mBACb,gBAAC,KAAD,CAAMM,GAAG,IAAIN,UAAU,eAAeO,KAAK,KACxCF,GAEH,0BACEL,UAAU,iBACVQ,KAAK,SACL,iBAAe,WACf,iBAAe,eACf,gBAAc,cACd,gBAAc,QACd,aAAW,qBAEX,wBAAMR,UAAU,yBAGlB,uBAAKA,UAAU,2BAA2BS,GAAG,eAC3C,sBAAIT,UAAU,mCACZ,sBAAIA,UAAU,YACZ,gBAACC,EAAD,CAAcK,GAAG,KACf,mCAGJ,sBAAIN,UAAU,YACZ,gBAACC,EAAD,CAAcK,GAAG,iBACf,sCAGJ,sBAAIN,UAAU,YACZ,gBAACC,EAAD,CAAcK,GAAG,iBACf,yCAQf,EAMDF,EAAOM,aAAe,CACpBL,UAAU,IAGZ,QCjBA,EAhCe,SAAC,GAAkB,IAAD,EAAfM,EAAe,EAAfA,SACVC,GAAOC,EAAAA,EAAAA,IAAe,cAW5B,OAFAC,QAAQC,IAAIH,GAGV,gCACE,gBAAC,EAAD,CAAQP,WAAW,UAAAO,EAAKI,KAAKC,oBAAV,eAAwBC,QAAxB,UACnB,uBACEC,MAAO,CACLC,OAAO,SACPC,SAAS,sBACTC,QAAQ,uBAGV,4BAAOX,IAId,C,+CC7BD,SAASY,EAAT,GAAgD,IAAD,IAAhCC,EAAgC,EAAhCA,YAAaN,EAAmB,EAAnBA,MAAOP,EAAY,EAAZA,SACzBK,GAASH,EAAAA,EAAAA,IAAe,YAAxBG,KAcFS,EAAkBD,GAAeR,EAAKC,aAAaO,YACnDE,EAAY,UAAGV,EAAKC,oBAAR,aAAG,EAAmBC,MAExC,OACE,gCACE,6BAAQQ,EAAkBR,EAAN,MAAiBQ,EAAiBR,GACtD,wBAAMS,KAAK,cAAcC,QAASH,IAClC,wBAAMI,SAAS,WAAWD,QAASV,IACnC,wBAAMW,SAAS,iBAAiBD,QAASH,IACzC,wBAAMI,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,kBAAkBC,SAAS,UAAAZ,EAAKC,oBAAL,eAAmBa,SAAnB,KACtC,wBAAMH,KAAK,gBAAgBC,QAASV,IACpC,wBAAMS,KAAK,sBAAsBC,QAASH,IACzCd,EAGN,CAEDY,EAAIb,aAAe,CACjBc,YAAY,IAQd,K,kGC1CaO,EAAO,kBAAM,gBAAC,IAAD,CAAKb,MAAM,kBAAjB,EAEpB,UATqB,kBACnB,gBAAC,IAAD,KACE,4CACA,oFAHiB,C","sources":["webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/404.js"],"sourcesContent":["import * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst isActive = ({ isCurrent }) => {\r\n  return isCurrent\r\n    ? { className: \"nav-link active\" }\r\n    : { className: \"nav-link\" }\r\n}\r\n\r\nconst ExactNavLink = props => <Link getProps={isActive} {...props} />\r\n\r\nconst Header = ({ siteTitle }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-md navbar-dark bg-primary\">\r\n      <div className=\"container-fluid\">\r\n        <Link to=\"/\" className=\"navbar-brand\" href=\"#\">\r\n          {siteTitle}\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#main-navbar\"\r\n          aria-controls=\"main-navbar\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"main-navbar\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-md-0\">\r\n            <li className=\"nav-item\">\r\n              <ExactNavLink to=\"/\">\r\n                <b>Team</b>\r\n              </ExactNavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <ExactNavLink to=\"/subject-list\">\r\n                <b>Subject</b>\r\n              </ExactNavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <ExactNavLink to=\"/student-list\">\r\n                <b>Student</b>\r\n              </ExactNavLink>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.scss\"\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  console.log(data)\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\r\n      <div\r\n        style={{\r\n          margin: `0 auto`,\r\n          maxWidth: `var(--size-content)`,\r\n          padding: `var(--size-gutter)`,\r\n        }}\r\n      >\r\n        <main>{children}</main>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction Seo({ description, title, children }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nSeo.defaultProps = {\r\n  description: ``,\r\n}\r\n\r\nSeo.propTypes = {\r\n  description: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Seo\r\n","import * as React from \"react\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst NotFoundPage = () => (\r\n  <Layout>\r\n    <h1>404: Not Found</h1>\r\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n  </Layout>\r\n)\r\n\r\nexport const Head = () => <Seo title=\"404: Not Found\" />\r\n\r\nexport default NotFoundPage\r\n"],"names":["isActive","isCurrent","className","ExactNavLink","props","getProps","Header","siteTitle","to","href","type","id","defaultProps","children","data","useStaticQuery","console","log","site","siteMetadata","title","style","margin","maxWidth","padding","Seo","description","metaDescription","defaultTitle","name","content","property","author","Head"],"sourceRoot":""}