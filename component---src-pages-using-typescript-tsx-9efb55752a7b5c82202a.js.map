{"version":3,"file":"component---src-pages-using-typescript-tsx-9efb55752a7b5c82202a.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/using-typescript.tsx","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\r\nimport * as React from \"react\"\r\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\ntype DataProps = {\r\n  site: {\r\n    buildTime: string\r\n  }\r\n}\r\n\r\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\r\n  data,\r\n  location,\r\n}) => (\r\n  <Layout>\r\n    <h1>\r\n      Gatsby supports <b>TypeScript by default</b>\r\n    </h1>\r\n    <p>\r\n      This means that you can create and write <code>.ts/.tsx</code> files for\r\n      your pages, components, and <code>gatsby-*</code> configuration files (for\r\n      example <code>gatsby-config.ts</code>).\r\n    </p>\r\n    <p>\r\n      For type checking you'll want to install <code>typescript</code> via npm\r\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\r\n    </p>\r\n    <p>\r\n      You're currently on the page <code>{location.pathname}</code> which was\r\n      built on {data.site.buildTime}.\r\n    </p>\r\n    <p>\r\n      To learn more, head over to our{\" \"}\r\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\r\n        documentation about TypeScript\r\n      </a>\r\n      .\r\n    </p>\r\n    <Link to=\"/\">Go back to the homepage</Link>\r\n  </Layout>\r\n)\r\n\r\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\r\n\r\nexport default UsingTypescript\r\n\r\nexport const query = graphql`\r\n  {\r\n    site {\r\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\r\n    }\r\n  }\r\n`\r\n","import * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst isActive = ({ isCurrent }) => {\r\n  return isCurrent\r\n    ? { className: \"nav-link active\" }\r\n    : { className: \"nav-link\" }\r\n}\r\n\r\nconst ExactNavLink = props => <Link getProps={isActive} {...props} />\r\n\r\nconst Header = ({ siteTitle }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-md navbar-dark bg-primary\">\r\n      <div className=\"container-fluid\">\r\n        <Link to=\"/\" className=\"navbar-brand\" href=\"#\">\r\n          {siteTitle}\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#main-navbar\"\r\n          aria-controls=\"main-navbar\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"main-navbar\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-md-0\">\r\n            <li className=\"nav-item\">\r\n              <ExactNavLink to=\"/\">\r\n                <b>Team</b>\r\n              </ExactNavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <ExactNavLink to=\"/subject-list\">\r\n                <b>Subject</b>\r\n              </ExactNavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <ExactNavLink to=\"/student-list\">\r\n                <b>Student</b>\r\n              </ExactNavLink>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.scss\"\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  console.log(data)\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\r\n      <div\r\n        style={{\r\n          margin: `0 auto`,\r\n          maxWidth: `var(--size-content)`,\r\n          padding: `var(--size-gutter)`,\r\n        }}\r\n      >\r\n        <main>{children}</main>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction Seo({ description, title, children }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nSeo.defaultProps = {\r\n  description: ``,\r\n}\r\n\r\nSeo.propTypes = {\r\n  description: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Seo\r\n"],"names":["Head","React","Seo","title","data","location","Layout","pathname","site","buildTime","href","Link","to","isActive","isCurrent","className","ExactNavLink","props","getProps","Header","siteTitle","type","id","defaultProps","children","useStaticQuery","console","log","siteMetadata","style","margin","maxWidth","padding","description","metaDescription","defaultTitle","name","content","property","author"],"sourceRoot":""}